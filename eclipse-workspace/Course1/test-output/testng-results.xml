<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="145" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="145" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
      <class name="com.course.dayone.Test1">
        <test-method status="PASS" signature="mybeforeSUite()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="mybeforeSUite" is-config="true" duration-ms="15" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeSUite -->
        <test-method status="PASS" signature="mybeforeClass()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="mybeforeClass" is-config="true" duration-ms="2" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeClass -->
        <test-method status="PASS" signature="mybeforeMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="mybeforeMethod" is-config="true" duration-ms="0" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method status="PASS" signature="Test3(java.lang.String, java.lang.String)[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="Test3" duration-ms="12" started-at="2018-10-20T20:48:54Z" data-provider="TestData" finished-at="2018-10-20T20:48:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="myafterMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myafterMethod" is-config="true" duration-ms="2" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myafterMethod -->
        <test-method status="PASS" signature="mybeforeMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="mybeforeMethod" is-config="true" duration-ms="1" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method status="PASS" signature="Test3(java.lang.String, java.lang.String)[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="Test3" duration-ms="3" started-at="2018-10-20T20:48:54Z" data-provider="TestData" finished-at="2018-10-20T20:48:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="mybeforeMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="mybeforeMethod" is-config="true" duration-ms="1" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method status="PASS" signature="myafterMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myafterMethod" is-config="true" duration-ms="0" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myafterMethod -->
        <test-method status="PASS" signature="Test3(java.lang.String, java.lang.String)[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="Test3" duration-ms="4" started-at="2018-10-20T20:48:54Z" data-provider="TestData" finished-at="2018-10-20T20:48:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[user3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="myafterMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myafterMethod" is-config="true" duration-ms="2" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myafterMethod -->
        <test-method status="PASS" signature="mybeforeMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="mybeforeMethod" is-config="true" duration-ms="10" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method status="FAIL" signature="myTest()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myTest" duration-ms="33" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <exception class="java.lang.NoClassDefFoundError">
            <message>
              <![CDATA[com/google/common/base/Function]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoClassDefFoundError: com/google/common/base/Function
at com.course.dayone.Test1.myTest(Test1.java:34)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.ClassNotFoundException: com.google.common.base.Function
at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoClassDefFoundError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest -->
        <test-method status="PASS" signature="myafterMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myafterMethod" is-config="true" duration-ms="2" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myafterMethod -->
        <test-method status="PASS" signature="mybeforeMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="mybeforeMethod" is-config="true" duration-ms="1" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mybeforeMethod -->
        <test-method status="PASS" signature="myTest2()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myTest2" duration-ms="1" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myTest2 -->
        <test-method status="PASS" signature="myafterMethod()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myafterMethod" is-config="true" duration-ms="1" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myafterMethod -->
        <test-method status="PASS" signature="myafterclass()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myafterclass" is-config="true" duration-ms="0" started-at="2018-10-20T20:48:54Z" finished-at="2018-10-20T20:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myafterclass -->
        <test-method status="PASS" signature="myAfterSuite()[pri:0, instance:com.course.dayone.Test1@18be83e4]" name="myAfterSuite" is-config="true" duration-ms="1" started-at="2018-10-20T20:48:55Z" finished-at="2018-10-20T20:48:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myAfterSuite -->
      </class> <!-- com.course.dayone.Test1 -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
